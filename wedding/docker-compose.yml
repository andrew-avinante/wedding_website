version: '3.8'

services:
  # Application Service (PHP-FPM)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: wedding-website:latest
    container_name: wedding-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      # Use named volume to share application files with nginx
      - app-files:/var/www/html
    environment:
      - APP_NAME=${APP_NAME:-Wedding}
      - APP_ENV=${APP_ENV:-production}
      # Don't override APP_KEY - let Laravel use the .env file generated by entrypoint
      - APP_DEBUG=${APP_DEBUG:-false}
      - APP_URL=${APP_URL:-http://localhost}
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE:-wedding}
      - DB_USERNAME=${DB_USERNAME:-wedding_user}
      - DB_PASSWORD=${DB_PASSWORD:-secret}
      - CACHE_DRIVER=file
      - SESSION_DRIVER=file
      - QUEUE_CONNECTION=sync
    networks:
      - wedding-network
    depends_on:
      mysql:
        condition: service_healthy

  # Nginx Service
  nginx:
    image: nginx:1.25-alpine
    container_name: wedding-nginx
    restart: unless-stopped
    ports:
      - "${APP_PORT:-80}:80"
      - "${APP_SSL_PORT:-443}:443"
    volumes:
      # Share application files with app container (read-only for nginx)
      - app-files:/var/www/html:ro
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - wedding-network
    depends_on:
      - app

  # MySQL Service
  mysql:
    image: mysql:8.0
    container_name: wedding-mysql
    restart: unless-stopped
    ports:
      - "${DB_PORT:-3306}:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-wedding}
      MYSQL_USER: ${DB_USERNAME:-wedding_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root_secret}
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD:-root_secret}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - wedding-network

  # PhpMyAdmin (Optional - for database management)
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: wedding-phpmyadmin
    restart: unless-stopped
    ports:
      - "${PMA_PORT:-8080}:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: ${DB_ROOT_PASSWORD:-root_secret}
      UPLOAD_LIMIT: 50M
    networks:
      - wedding-network
    depends_on:
      mysql:
        condition: service_healthy
    profiles:
      - dev

networks:
  wedding-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
  app-files:
    driver: local
